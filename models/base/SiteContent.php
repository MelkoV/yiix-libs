<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace yiix\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;

/**
 * This is the base-model class for table "site_content".
 *
 * @property integer $id
 * @property string $type
 * @property string $content_type
 * @property string $page_title
 * @property string $long_title
 * @property string $description
 * @property string $alias
 * @property string $link_attributes
 * @property integer $published
 * @property integer $pub_date
 * @property integer $un_pub_date
 * @property integer $parent_id
 * @property integer $is_folder
 * @property string $intro_text
 * @property string $content
 * @property integer $rich_text
 * @property integer $template_id
 * @property integer $menu_index
 * @property integer $searchable
 * @property integer $cacheable
 * @property integer $created_on
 * @property integer $edited_by
 * @property integer $edited_on
 * @property integer $deleted
 * @property integer $deleted_by
 * @property integer $deleted_on
 * @property integer $published_by
 * @property integer $published_on
 * @property string $menu_title
 * @property integer $private_web
 * @property integer $private_mgr
 * @property integer $content_dispo
 * @property integer $hide_menu
 * @property integer $alias_visible
 * @property integer $created_by
 *
 * @property \common\models\DocumentGroup[] $documentGroups
 * @property \common\models\KeywordXref[] $keywordXrefs
 * @property \common\models\SiteKeyword[] $keywords
 * @property \common\models\User $createdBy
 * @property \common\models\User $deletedBy
 * @property \common\models\User $editedBy
 * @property \common\models\SiteContent $parent
 * @property \common\models\SiteContent[] $siteContents
 * @property \common\models\User $publishedBy
 * @property \common\models\SiteTemplate $template
 * @property \common\models\SiteContentMetaTag[] $siteContentMetaTags
 * @property \common\models\SiteMetaTag[] $metaTags
 * @property \common\models\SiteTemplateVarContent[] $siteTemplateVarContents
 * @property string $aliasModel
 */
abstract class SiteContent extends \melkov\db\ActiveRecord 
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%site_content}}';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'updatedByAttribute' => false,
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['type', 'content_type', 'page_title', 'long_title', 'description', 'alias', 'link_attributes', 'menu_title'], 'trim', 'skipOnEmpty' => true],
            [['published', 'pub_date', 'un_pub_date', 'parent_id', 'is_folder', 'rich_text', 'template_id', 'menu_index', 'searchable', 'cacheable', 'created_on', 'edited_by', 'edited_on', 'deleted', 'deleted_by', 'deleted_on', 'published_by', 'published_on', 'private_web', 'private_mgr', 'content_dispo', 'hide_menu', 'alias_visible'], 'integer'],
            [['intro_text', 'content'], 'string'],
            [['template_id', 'created_on'], 'required'],
            [['type'], 'string', 'max' => 20],
            [['content_type'], 'string', 'max' => 50],
            [['page_title', 'long_title', 'description', 'link_attributes', 'menu_title'], 'string', 'max' => 255],
            [['alias'], 'string', 'max' => 245],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['created_by' => 'id']],
            [['deleted_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['deleted_by' => 'id']],
            [['edited_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['edited_by' => 'id']],
            [['parent_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\SiteContent::className(), 'targetAttribute' => ['parent_id' => 'id']],
            [['published_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['published_by' => 'id']],
            [['template_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\SiteTemplate::className(), 'targetAttribute' => ['template_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('label', 'ID'),
            'type' => Yii::t('label', 'Type'),
            'content_type' => Yii::t('label', 'Content Type'),
            'page_title' => Yii::t('label', 'Page Title'),
            'long_title' => Yii::t('label', 'Long Title'),
            'description' => Yii::t('label', 'Description'),
            'alias' => Yii::t('label', 'Alias'),
            'link_attributes' => Yii::t('label', 'Link Attributes'),
            'published' => Yii::t('label', 'Published'),
            'pub_date' => Yii::t('label', 'Pub Date'),
            'un_pub_date' => Yii::t('label', 'Un Pub Date'),
            'parent_id' => Yii::t('label', 'Parent ID'),
            'is_folder' => Yii::t('label', 'Is Folder'),
            'intro_text' => Yii::t('label', 'Intro Text'),
            'content' => Yii::t('label', 'Content'),
            'rich_text' => Yii::t('label', 'Rich Text'),
            'template_id' => Yii::t('label', 'Template ID'),
            'menu_index' => Yii::t('label', 'Menu Index'),
            'searchable' => Yii::t('label', 'Searchable'),
            'cacheable' => Yii::t('label', 'Cacheable'),
            'created_by' => Yii::t('label', 'Created By'),
            'created_on' => Yii::t('label', 'Created On'),
            'edited_by' => Yii::t('label', 'Edited By'),
            'edited_on' => Yii::t('label', 'Edited On'),
            'deleted' => Yii::t('label', 'Deleted'),
            'deleted_by' => Yii::t('label', 'Deleted By'),
            'deleted_on' => Yii::t('label', 'Deleted On'),
            'published_by' => Yii::t('label', 'Published By'),
            'published_on' => Yii::t('label', 'Published On'),
            'menu_title' => Yii::t('label', 'Menu Title'),
            'private_web' => Yii::t('label', 'Private Web'),
            'private_mgr' => Yii::t('label', 'Private Mgr'),
            'content_dispo' => Yii::t('label', 'Content Dispo'),
            'hide_menu' => Yii::t('label', 'Hide Menu'),
            'alias_visible' => Yii::t('label', 'Alias Visible'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocumentGroups()
    {
        return $this->hasMany(\common\models\DocumentGroup::className(), ['document_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKeywordXrefs()
    {
        return $this->hasMany(\common\models\KeywordXref::className(), ['content_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKeywords()
    {
        return $this->hasMany(\common\models\SiteKeyword::className(), ['id' => 'keyword_id'])->viaTable('yiix_keyword_xref', ['content_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDeletedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'deleted_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEditedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'edited_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParent()
    {
        return $this->hasOne(\common\models\SiteContent::className(), ['id' => 'parent_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteContents()
    {
        return $this->hasMany(\common\models\SiteContent::className(), ['parent_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPublishedBy()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'published_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTemplate()
    {
        return $this->hasOne(\common\models\SiteTemplate::className(), ['id' => 'template_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteContentMetaTags()
    {
        return $this->hasMany(\common\models\SiteContentMetaTag::className(), ['content_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMetaTags()
    {
        return $this->hasMany(\common\models\SiteMetaTag::className(), ['id' => 'meta_tag_id'])->viaTable('yiix_site_content_meta_tag', ['content_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteTemplateVarContents()
    {
        return $this->hasMany(\common\models\SiteTemplateVarContent::className(), ['content_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\SiteContentQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\SiteContentQuery(get_called_class());
    }


}
