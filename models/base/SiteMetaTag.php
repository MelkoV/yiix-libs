<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace yiix\models\base;

use Yii;

/**
 * This is the base-model class for table "site_meta_tag".
 *
 * @property integer $id
 * @property string $name
 * @property string $tag
 * @property string $value
 * @property integer $http_equiv
 *
 * @property \common\models\SiteContentMetaTag[] $siteContentMetaTags
 * @property \common\models\SiteContent[] $contents
 * @property string $aliasModel
 */
abstract class SiteMetaTag extends \melkov\db\ActiveRecord 
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%site_meta_tag}}';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'tag', 'value'], 'trim', 'skipOnEmpty' => true],
            [['http_equiv'], 'integer'],
            [['name', 'tag'], 'string', 'max' => 50],
            [['value'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('label', 'ID'),
            'name' => Yii::t('label', 'Name'),
            'tag' => Yii::t('label', 'Tag'),
            'value' => Yii::t('label', 'Value'),
            'http_equiv' => Yii::t('label', 'Http Equiv'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteContentMetaTags()
    {
        return $this->hasMany(\common\models\SiteContentMetaTag::className(), ['meta_tag_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContents()
    {
        return $this->hasMany(\common\models\SiteContent::className(), ['id' => 'content_id'])->viaTable('yiix_site_content_meta_tag', ['meta_tag_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\SiteMetaTagQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\SiteMetaTagQuery(get_called_class());
    }


}
