<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace yiix\models\base;

use Yii;

/**
 * This is the base-model class for table "site_template_var".
 *
 * @property integer $id
 * @property integer $type_id
 * @property string $name
 * @property string $caption
 * @property string $description
 * @property integer $editor_type
 * @property integer $category_id
 * @property integer $locked
 * @property string $elements
 * @property integer $rank
 * @property string $display
 * @property string $display_params
 * @property string $default_text
 *
 * @property \common\models\Category $category
 * @property \common\models\SiteTemplateVarType $type
 * @property \common\models\SiteTemplateVarContent[] $siteTemplateVarContents
 * @property \common\models\SiteTemplateVarTemplate[] $siteTemplateVarTemplates
 * @property \common\models\SiteTemplate[] $templates
 * @property string $aliasModel
 */
abstract class SiteTemplateVar extends \melkov\db\ActiveRecord 
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%site_template_var}}';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'caption', 'description', 'display'], 'trim', 'skipOnEmpty' => true],
            [['type_id', 'name'], 'required'],
            [['type_id', 'editor_type', 'category_id', 'locked', 'rank'], 'integer'],
            [['elements', 'display_params', 'default_text'], 'string'],
            [['name'], 'string', 'max' => 50],
            [['caption'], 'string', 'max' => 80],
            [['description'], 'string', 'max' => 255],
            [['display'], 'string', 'max' => 20],
            [['name'], 'unique'],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Category::className(), 'targetAttribute' => ['category_id' => 'id']],
            [['type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\SiteTemplateVarType::className(), 'targetAttribute' => ['type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('label', 'ID'),
            'type_id' => Yii::t('label', 'Type ID'),
            'name' => Yii::t('label', 'Name'),
            'caption' => Yii::t('label', 'Caption'),
            'description' => Yii::t('label', 'Description'),
            'editor_type' => Yii::t('label', 'Editor Type'),
            'category_id' => Yii::t('label', 'Category ID'),
            'locked' => Yii::t('label', 'Locked'),
            'elements' => Yii::t('label', 'Elements'),
            'rank' => Yii::t('label', 'Rank'),
            'display' => Yii::t('label', 'Display'),
            'display_params' => Yii::t('label', 'Display Params'),
            'default_text' => Yii::t('label', 'Default Text'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\common\models\Category::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getType()
    {
        return $this->hasOne(\common\models\SiteTemplateVarType::className(), ['id' => 'type_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteTemplateVarContents()
    {
        return $this->hasMany(\common\models\SiteTemplateVarContent::className(), ['template_var_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSiteTemplateVarTemplates()
    {
        return $this->hasMany(\common\models\SiteTemplateVarTemplate::className(), ['template_var_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTemplates()
    {
        return $this->hasMany(\common\models\SiteTemplate::className(), ['id' => 'template_id'])->viaTable('yiix_site_template_var_template', ['template_var_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\SiteTemplateVarQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\SiteTemplateVarQuery(get_called_class());
    }


}
