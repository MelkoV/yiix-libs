<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace yiix\models\base;

use Yii;

/**
 * This is the base-model class for table "keyword_xref".
 *
 * @property integer $content_id
 * @property integer $keyword_id
 *
 * @property \common\models\SiteContent $content
 * @property \common\models\SiteKeyword $keyword
 * @property string $aliasModel
 */
abstract class KeywordXref extends \melkov\db\ActiveRecord 
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%keyword_xref}}';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['content_id', 'keyword_id'], 'required'],
            [['content_id', 'keyword_id'], 'integer'],
            [['content_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\SiteContent::className(), 'targetAttribute' => ['content_id' => 'id']],
            [['keyword_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\SiteKeyword::className(), 'targetAttribute' => ['keyword_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'content_id' => Yii::t('label', 'Content ID'),
            'keyword_id' => Yii::t('label', 'Keyword ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContent()
    {
        return $this->hasOne(\common\models\SiteContent::className(), ['id' => 'content_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKeyword()
    {
        return $this->hasOne(\common\models\SiteKeyword::className(), ['id' => 'keyword_id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\KeywordXrefQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\KeywordXrefQuery(get_called_class());
    }


}
